version: "3.8"

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog-backend
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
      FRONTEND_URL: ${FRONTEND_URL}

  queue:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog-queue-worker
    entrypoint: [""]
    command: sh -c "php artisan queue:work --verbose --tries=3 --timeout=90 & while [ true ]; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
      FRONTEND_URL: ${FRONTEND_URL}

  mysql:
    image: mysql:8
    container_name: blog-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: blog_db
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  redis:
    image: redis:alpine
    container_name: blog-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 5
      interval: 5s
      start_period: 10s

  nginx:
    image: nginx:alpine
    container_name: blog-nginx
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    working_dir: /app
    command: ["npm", "run", "dev"]
    depends_on:
      - nginx

volumes:
  mysql_data:
